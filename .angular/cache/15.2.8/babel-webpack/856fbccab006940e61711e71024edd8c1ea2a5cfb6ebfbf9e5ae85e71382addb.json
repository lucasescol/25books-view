{"ast":null,"code":"import { EMPTY, catchError, map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BorrowService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = \"http://localhost:5000/api/book/borrow\";\n  }\n  newBorrow(borrow) {\n    let req = {\n      \"borrow\": borrow\n    };\n    console.log(req);\n    return this.http.post(this.baseUrl, req).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  getBorrow() {\n    return this.http.get(this.baseUrl).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  getBorrowById(id) {\n    let url = `${this.baseUrl}/${id}`;\n    return this.http.get(url).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  deleteBorrow(id) {\n    let url = `${this.baseUrl}/${id}`;\n    console.log(url);\n    console.log(\"passou aqui\");\n    return this.http.delete(url).pipe(map(obj => obj), catchError(e => this.errorHandler(e)));\n  }\n  errorHandler(e) {\n    alert(e.msg);\n    console.log(e);\n    return EMPTY;\n  }\n}\nBorrowService.ɵfac = function BorrowService_Factory(t) {\n  return new (t || BorrowService)(i0.ɵɵinject(i1.HttpClient));\n};\nBorrowService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BorrowService,\n  factory: BorrowService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,KAAK,EAAcC,UAAU,EAAEC,GAAG,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,uCAAuC;EAET;EAExCC,SAAS,CAACC,MAAc;IACtB,IAAIC,GAAG,GAAG;MAAE,QAAQ,EAAED;IAAM,CAAE;IAC9BE,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAS,IAAI,CAACC,OAAO,EAAEJ,GAAG,CAAC,CAACK,IAAI,CACnDX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAAC,EACfb,UAAU,CAACc,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEAE,SAAS;IACP,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAW,IAAI,CAACN,OAAO,CAAC,CAACC,IAAI,CAC/CX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAAC,EACfb,UAAU,CAACc,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEAI,aAAa,CAACC,EAAU;IACtB,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACT,OAAO,IAAIQ,EAAE,EAAE;IACjC,OAAO,IAAI,CAACf,IAAI,CAACa,GAAG,CAAWG,GAAG,CAAC,CAACR,IAAI,CACtCX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAAC,EACfb,UAAU,CAACc,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEAO,YAAY,CAACF,EAAU;IACrB,IAAIC,GAAG,GAAG,GAAG,IAAI,CAACT,OAAO,IAAIQ,EAAE,EAAE;IACjCX,OAAO,CAACC,GAAG,CAACW,GAAG,CAAC;IAChBZ,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACkB,MAAM,CAASF,GAAG,CAAC,CAACR,IAAI,CACvCX,GAAG,CAACY,GAAG,IAAIA,GAAG,CAAC,EACfb,UAAU,CAACc,CAAC,IAAI,IAAI,CAACC,YAAY,CAACD,CAAC,CAAC,CAAC,CACtC;EACH;EAEAC,YAAY,CAACD,CAAM;IACjBS,KAAK,CAACT,CAAC,CAACU,GAAG,CAAC;IACZhB,OAAO,CAACC,GAAG,CAACK,CAAC,CAAC;IACd,OAAOf,KAAK;EACd;;AA3CWG,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAuB,SAAbvB,aAAa;EAAAwB,YAFZ;AAAM","names":["EMPTY","catchError","map","BorrowService","constructor","http","newBorrow","borrow","req","console","log","post","baseUrl","pipe","obj","e","errorHandler","getBorrow","get","getBorrowById","id","url","deleteBorrow","delete","alert","msg","factory","providedIn"],"sourceRoot":"","sources":["D:\\Lucas\\25Books\\frontend\\src\\app\\services\\borrow.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Borrow } from '../models/borrow.model';\nimport { EMPTY, Observable, catchError, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BorrowService {\n  baseUrl = \"http://localhost:5000/api/book/borrow\"\n\n  constructor(private http: HttpClient) { }\n\n  newBorrow(borrow: Borrow): Observable<any> {\n    let req = { \"borrow\": borrow }\n    console.log(req)\n    return this.http.post<Borrow>(this.baseUrl, req).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  getBorrow(): Observable<Borrow[]> {\n    return this.http.get<Borrow[]>(this.baseUrl).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  getBorrowById(id: string): Observable<Borrow> {\n    let url = `${this.baseUrl}/${id}`\n    return this.http.get<Borrow[]>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  deleteBorrow(id: string): Observable<any> {\n    let url = `${this.baseUrl}/${id}`\n    console.log(url)\n    console.log(\"passou aqui\")\n    return this.http.delete<Borrow>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  errorHandler(e: any): Observable<any> {\n    alert(e.msg)\n    console.log(e)\n    return EMPTY\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}